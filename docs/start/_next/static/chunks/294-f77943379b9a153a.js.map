{"version":3,"file":"static/chunks/294-f77943379b9a153a.js","mappings":"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","sources":["webpack://_N_E/./node_modules/classnames/index.js","webpack://_N_E/./node_modules/next/dist/client/image.js","webpack://_N_E/./node_modules/next/dist/shared/lib/image-blur-svg.js","webpack://_N_E/./node_modules/next/image.js","webpack://_N_E/<anon>"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use client\";\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(require(\"react\"));\nconst _head = /*#__PURE__*/ _interop_require_default._(require(\"../shared/lib/head\"));\nconst _imageblursvg = require(\"../shared/lib/image-blur-svg\");\nconst _imageconfig = require(\"../shared/lib/image-config\");\nconst _imageconfigcontext = require(\"../shared/lib/image-config-context\");\nconst _warnonce = require(\"../shared/lib/utils/warn-once\");\nconst _imageloader = /*#__PURE__*/ _interop_require_default._(require(\"next/dist/shared/lib/image-loader\"));\n\nconst configEnv = process.env.__NEXT_IMAGE_OPTS;\nconst allImgs = new Map();\nlet perfObserver;\nif (typeof window === \"undefined\") {\n    globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths(param, width, sizes) {\n    let { deviceSizes , allSizes  } = param;\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > This means that most OLED screens that say they are 3x resolution,\n        // > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs(param) {\n    let { config , src , unoptimized , width , quality , sizes , loader  } = param;\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>loader({\n                config,\n                src,\n                quality,\n                width: w\n            }) + \" \" + (kind === \"w\" ? w : i + 1) + kind).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"number\") {\n        return Number.isFinite(x) ? x : NaN;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentElement || !img.isConnected) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === \"blur\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current({\n                ...event,\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            });\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has \"fill\" and parent element with invalid \"position\". Provided \"' + position + '\" should be one of ' + valid.map(String).join(\",\") + \".\");\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.');\n            }\n        }\n    });\n}\nfunction getDynamicProps(fetchPriority) {\n    const [majorStr, minorStr] = _react.version.split(\".\");\n    const major = parseInt(majorStr, 10);\n    const minor = parseInt(minorStr, 10);\n    if (major > 18 || major === 18 && minor >= 3) {\n        // In React 18.3.0 or newer, we must use camelCase\n        // prop to avoid \"Warning: Invalid DOM property\".\n        // See https://github.com/facebook/react/pull/25927\n        return {\n            fetchPriority\n        };\n    }\n    // In React 18.2.0 or older, we must use lowercase prop\n    // to avoid \"Warning: Invalid DOM property\".\n    return {\n        fetchpriority: fetchPriority\n    };\n}\nconst ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{\n    let { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fetchPriority , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadRef , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError , ...rest } = param;\n    loading = isLazy ? \"lazy\" : loading;\n    return /*#__PURE__*/ _react.default.createElement(\"img\", {\n        ...rest,\n        ...getDynamicProps(fetchPriority),\n        loading: loading,\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        style: {\n            ...imgStyle,\n            ...blurStyle\n        },\n        ...imgAttributes,\n        ref: (0, _react.useCallback)((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!srcString) {\n                    console.error('Image is missing required \"src\" property:', img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === \"blur\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    });\n});\nconst Image = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{\n    let { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoad , onLoadingComplete , placeholder =\"empty\" , blurDataURL , fetchPriority , layout , objectFit , objectPosition , lazyBoundary , lazyRoot , ...all } = param;\n    const configContext = (0, _react.useContext)(_imageconfigcontext.ImageConfigContext);\n    const config = (0, _react.useMemo)(()=>{\n        const c = configEnv || configContext || _imageconfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return {\n            ...c,\n            allSizes,\n            deviceSizes\n        };\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = rest.loader || _imageloader.default;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error('Image with src \"' + src + '\" is missing \"loader\" prop.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        loader = (obj)=>{\n            const { config: _ , ...opts } = obj;\n            return customImageLoader(opts);\n        };\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = {\n                ...style,\n                ...layoutStyle\n            };\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \" + JSON.stringify(staticImageData));\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \" + JSON.stringify(staticImageData));\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (!src || src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    if (priority) {\n        fetchPriority = \"high\";\n    }\n    const [blurComplete, setBlurComplete] = (0, _react.useState)(false);\n    const [showAltText, setShowAltText] = (0, _react.useState)(false);\n    const qualityInt = getInt(quality);\n    if (process.env.NODE_ENV !== \"production\") {\n        if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n            throw new Error(\"Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\\n  Possible solutions:\\n    - Remove `{ output: 'export' }` and run \\\"next start\\\" to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api\");\n        }\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error('Image with src \"' + src + '\" has both \"width\" and \"fill\" properties. Only one should be used.');\n                }\n                if (height) {\n                    throw new Error('Image with src \"' + src + '\" has both \"height\" and \"fill\" properties. Only one should be used.');\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.');\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error('Image with src \"' + src + '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.');\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"width\" property.');\n                } else if (isNaN(widthInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"' + width + '\".');\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error('Image with src \"' + src + '\" is missing required \"height\" property.');\n                } else if (isNaN(heightInt)) {\n                    throw new Error('Image with src \"' + src + '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"' + height + '\".');\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error('Image with src \"' + src + '\" has invalid \"loading\" property. Provided \"' + loading + '\" should be one of ' + VALID_LOADING_VALUES.map(String).join(\",\") + \".\");\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error('Image with src \"' + src + '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.');\n        }\n        if (placeholder === \"blur\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is smaller than 40x40. Consider removing the \"placeholder=\\'blur\\'\" property to improve performance.');\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    \"jpeg\",\n                    \"png\",\n                    \"webp\",\n                    \"avif\"\n                ] // should match next-image-loader\n                ;\n                throw new Error('Image with src \"' + src + '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n          Possible solutions:\\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n            - Change the \"src\" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(\",\") + '\\n            - Remove the \"placeholder\" property, effectively no blur effect\\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url');\n            }\n        }\n        if (\"ref\" in rest) {\n            (0, _warnonce.warnOnce)('Image with src \"' + src + '\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.');\n        }\n        if (!unoptimized && loader !== _imageloader.default) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n            }\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnonce.warnOnce)('Image with src \"' + src + '\" has legacy prop \"' + legacyKey + '\". Did you forget to run the codemod?' + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n            }\n        }\n        if (typeof window !== \"undefined\" && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var _entry_element;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || \"\";\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder !== \"blur\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnonce.warnOnce)('Image with src \"' + lcpImage.src + '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.' + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: \"largest-contentful-paint\",\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const blurStyle = placeholder === \"blur\" && blurDataURL && !blurComplete ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage: 'url(\"data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL,\n            objectFit: imgStyle.objectFit\n        }) + '\")'\n    } : {};\n    if (process.env.NODE_ENV === \"development\") {\n        if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            blurStyle.backgroundImage = 'url(\"' + blurDataURL + '\")';\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof window !== \"undefined\") {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const onLoadRef = (0, _react.useRef)(onLoad);\n    (0, _react.useEffect)(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);\n    (0, _react.useEffect)(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = {\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fetchPriority,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText,\n        ...rest\n    };\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, {\n        ...imgElementArgs,\n        ref: forwardedRef\n    }), priority ? // Note how we omit the `href` attribute, as it would only be relevant\n    // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", {\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: rest.crossOrigin,\n        referrerPolicy: rest.referrerPolicy,\n        ...getDynamicProps(fetchPriority)\n    })) : null);\n});\nconst _default = Image;\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n//# sourceMappingURL=image.js.map","/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"getImageBlurSvg\", {\n    enumerable: true,\n    get: function() {\n        return getImageBlurSvg;\n    }\n});\nfunction getImageBlurSvg(param) {\n    let { widthInt , heightInt , blurWidth , blurHeight , blurDataURL , objectFit  } = param;\n    const std = blurWidth && blurHeight ? \"1\" : \"20\";\n    const svgWidth = blurWidth || widthInt;\n    const svgHeight = blurHeight || heightInt;\n    const feComponentTransfer = blurDataURL.startsWith(\"data:image/jpeg\") ? \"%3CfeComponentTransfer%3E%3CfeFuncA type='discrete' tableValues='1 1'/%3E%3C/feComponentTransfer%3E%\" : \"\";\n    if (svgWidth && svgHeight) {\n        return \"%3Csvg xmlns='http%3A//www.w3.org/2000/svg' viewBox='0 0 \" + svgWidth + \" \" + svgHeight + \"'%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='\" + std + \"'/%3E\" + feComponentTransfer + \"%3C/filter%3E%3Cimage preserveAspectRatio='none' filter='url(%23b)' x='0' y='0' height='100%25' width='100%25' href='\" + blurDataURL + \"'/%3E%3C/svg%3E\";\n    }\n    const preserveAspectRatio = objectFit === \"contain\" ? \"xMidYMid\" : objectFit === \"cover\" ? \"xMidYMid slice\" : \"none\";\n    return \"%3Csvg xmlns='http%3A//www.w3.org/2000/svg'%3E%3Cimage style='filter:blur(20px)' preserveAspectRatio='\" + preserveAspectRatio + \"' x='0' y='0' height='100%25' width='100%25' href='\" + blurDataURL + \"'/%3E%3C/svg%3E\";\n}\n\n//# sourceMappingURL=image-blur-svg.js.map","module.exports = require('./dist/client/image')\n"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","undefined","value","enumerable","get","_default","_interop_require_default","require","_interop_require_wildcard","_react","_","_head","_imageblursvg","_imageconfig","_imageconfigcontext","_imageloader","configEnv","process","isStaticRequire","src","getInt","x","Number","isFinite","NaN","test","parseInt","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","unoptimized","p","decode","Promise","resolve","catch","then","parentElement","isConnected","current","event","Event","defineProperty","writable","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","getDynamicProps","fetchPriority","majorStr","minorStr","version","split","major","minor","fetchpriority","ImageElement","forwardRef","param","forwardedRef","imgAttributes","heightInt","widthInt","qualityInt","className","imgStyle","blurStyle","isLazy","fill","loading","srcString","config","loader","setShowAltText","onLoad","onError","rest","createElement","width","height","decoding","style","ref","useCallback","complete","Image","blurWidth","blurHeight","sizes","priority","quality","onLoadingComplete","blurDataURL","layout","objectFit","objectPosition","lazyBoundary","lazyRoot","all","configContext","useContext","ImageConfigContext","useMemo","c","imageConfigDefault","allSizes","deviceSizes","imageSizes","sort","a","b","isDefaultLoader","customImageLoader","opts","obj","layoutStyle","layoutToStyle","intrinsic","maxWidth","responsive","layoutSizes","layoutToSizes","staticSrc","staticImageData","JSON","stringify","ratio","Math","round","startsWith","endsWith","dangerouslyAllowSVG","blurComplete","useState","showAltText","assign","position","left","top","right","bottom","color","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","getImageBlurSvg","generateImgAttrs","srcSet","widths","kind","getWidths","viewportWidthRe","percentSizes","match","exec","smallestRatio","min","filter","s","Set","map","find","w","last","useRef","useEffect","imgElementArgs","Fragment","rel","as","href","imageSrcSet","crossOrigin","referrerPolicy","__esModule","svgWidth","svgHeight","feComponentTransfer","__webpack_require__"],"sourceRoot":""}